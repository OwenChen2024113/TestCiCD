name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
env:
  IMAGE_INFO: "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GCR_SERVICE }}:ver-${{ github.run_number }}"
  
jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
          
      # BEGIN - Docker auth and build
      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ vars.GAR_LOCATION }}-docker.pkg.dev"
        
      - name: Build and Push Container
        run: |-
          docker build -t "${{env.IMAGE_INFO}}" ./
          docker push "${{env.IMAGE_INFO}}"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ vars.GCR_SERVICE }}'
          region: '${{ vars.GCR_REGION }}'
          # NOTE: If using a pre-built image, update the image name here
          image: "${{env.IMAGE_INFO}}"

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
